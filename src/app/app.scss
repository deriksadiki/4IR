// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
.splash{
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 999;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(rgb(160, 160, 160), whitesmoke)
}
.spinner {
    width: 40px;
    height: 40px;
  
    position: relative;
    margin: 100px auto;
  }.spinner {
    margin: 100px auto;
    width: 50px;
    height: 40px;
    text-align: center;
    font-size: 10px;
  }
  
  .spinner > div {
    background-color: #333;
    height: 100%;
    width: 6px;
    display: inline-block;
    
    -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
    animation: sk-stretchdelay 1.2s infinite ease-in-out;
  }
  
  .spinner .rect2 {
    -webkit-animation-delay: -1.1s;
    animation-delay: -1.1s;
  }
  
  .spinner .rect3 {
    -webkit-animation-delay: -1.0s;
    animation-delay: -1.0s;
  }
  
  .spinner .rect4 {
    -webkit-animation-delay: -0.9s;
    animation-delay: -0.9s;
  }
  
  .spinner .rect5 {
    -webkit-animation-delay: -0.8s;
    animation-delay: -0.8s;
  }
  
  @-webkit-keyframes sk-stretchdelay {
    0%, 40%, 100% { -webkit-transform: scaleY(0.4) }  
    20% { -webkit-transform: scaleY(1.0) }
  }
  
  @keyframes sk-stretchdelay {
    0%, 40%, 100% { 
      transform: scaleY(0.4);
      -webkit-transform: scaleY(0.4);
    }  20% { 
      transform: scaleY(1.0);
      -webkit-transform: scaleY(1.0);
    }
  }
  .myAlert {
  
    color: #ffffff;
    button {
        color: rgb(255, 255, 255);
      margin: 0 auto;
      text-transform: uppercase;
    }
    .alert-message {
      color: rgb(255, 255, 255); // text color for confirm alerts
    }
    .alert-wrapper {
      background-color: #04592a;
      border-radius: 10px;
      color: #ffffff;
      animation: 0.7s bounceIn;
    }
    .alert-subTitle{
      color: rgb(255, 255, 255);
    }
  
    
  }
  .alert-md .alert-input {
        margin: 5px 0;
        border-bottom: 1px solid #ffffff;
        color: rgb(255, 255, 255) !important;
    }
 .alert-md .alert-button .button-inner {
  
        border-radius: 2px;
        position: relative;
        overflow: hidden;
        font-weight: 500;
        text-transform: uppercase;
        color: #ffffff !important;
        background-color: transparent;
    
    }
    .loading-md .loading-wrapper {
        max-height: 13%;
        border-radius: 15px;
        background-color: #ffffff;
        color: #000000 !important;
      }
      .loading-md .spinner-crescent circle {
        stroke: #999999;
    }
    .toast-md .toast-message {
        font-size: 1.5rem;
        color: #000000;
        padding: 19px 16px 17px;
        background-color: #Ffffff
    }